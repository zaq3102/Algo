class Solution {
    static int[][] answer;
    static int idx;
    public int[][] solution(int n) {
        idx = 0;
        answer = new int[(int)Math.pow(2, n) - 1][2];
        hanoi(n, 1, 3, 2);
        return answer;
    }
    
    public static void hanoi(int n, int start, int end, int way) {
        if(n == 1) {
            answer[idx++] = new int[]{start, end};
        } else {
            hanoi(n -1, start, way, end);
            answer[idx++] = new int[]{start, end};
            hanoi(n - 1, way, end, start);
        }
    }
}

// 몇번만에 옮기느냐? -> DP
// 옮기는 방법 -> 재귀
// 기둥 3개가 고정이므로 start, way, end 로 구분지어 재귀로 돌린다
// n을 하나씩 줄여가며 answer를 채워주자
