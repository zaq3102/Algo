import java.util.*;

class Solution {
    
    static int[] dx = {0, 1, 1}; // 우 하 우하
    static int[] dy = {1, 0, 1};
    static int M, N;
    static char[][] initMap;
        
    public int solution(int m, int n, String[] board) {
        int answer = 0;
        M = m; // 행 개수
        N = n; // 열 개수
        initMap = new char[M][N];
        for(int i = 0; i < m; i++) {
            String temp = board[i];
            for(int j = 0; j < n; j++) {
                initMap[i][j] = temp.charAt(j);
            }
        }
        
        while(true) {
            int temp = breakBlock();
            if(temp == 0) {
                break;
            } else {
                answer += temp;
                moveBlock();
            }
        }
        
        return answer;
    }
    
    public static int breakBlock() {
        boolean[][] visited = new boolean[M][N];
        int sum = 0;
        
        for(int i = 0; i < M - 1; i++) {
            for(int j = 0; j < N - 1; j++) {
                if(initMap[i][j] == 'X') {
                    continue;
                }
                for(int k = 0; k < 3; k++) {
                    if(initMap[i][j] != initMap[i + dx[k]][j + dy[k]]) {
                        break;
                    }
                    if(k == 2) {
                        // 똑같은 2x2 찾음
                        visited[i][j] =true;
                        visited[i + 1][j] = true;
                        visited[i][j + 1] = true;
                        visited[i + 1][j + 1] = true;
                    }
                } // end of squareFor
            } // end of inFor
        } // end of outFor
        
        for(int i = 0; i < M; i++) {
            for(int j = 0; j < N; j++) {
                if(visited[i][j]) {
                    sum++;
                    initMap[i][j] = 'X';
                }
            }
        }
        return sum;
    } // end of breakBlock
    
    public static void moveBlock(){
        for(int i = 0; i < N; i++) {
            int Xcnt = 0;
            for(int j = 0; j < M; j++) {
                if(initMap[j][i] == 'X') {
                    Xcnt++;
                    for(int t = j - 1; t >= 0; t--) {
                        if(initMap[t][i] == 'X') {
                            break;
                        }
                        initMap[t + 1][i] = initMap[t][i];
                    }
                }
            } // end of inFor
            for(int k = 0; k < Xcnt; k++) {
                initMap[k][i] = 'X';
            }
        } // end of outFor
        
        return;
    } // end of moveBlock
}

// 블럭 깨는 함수 and 블럭 내리는 함수 따로 구현하자
// 빡구현 문제 => 푸는 속도를 늘리자!!!