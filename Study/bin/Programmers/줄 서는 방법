import java.util.*;

class Solution {
    static long[] factorial;
    static boolean[] visited;
    
    public int[] solution(int n, long k) {
        long[] factorial = new long[n + 1];
        
        factorial[0] = 0L;
        factorial[1] = 1L;
        for(int i = 2; i <= n; i++) {
            factorial[i] = factorial[i - 1] * i;
        }
        
        visited = new boolean[n + 1];
        List<Integer> answerArr = new ArrayList<>();
        
        for(int i = n - 1; i > 0; i--) {
            long h = (k / factorial[i]) + 1;
            if(k % factorial[i] == 0) {
                h--;
                k = factorial[i];
            } else {
                k = k % factorial[i];
            }
            answerArr.add(getNumber(h));
        } 
        answerArr.add(getNumber(1));
        int[] answer = new int[n];
        
        for(int i = 0; i < answer.length; i++) {
            answer[i] = answerArr.get(i);
        }
        
        return answer;
    } // end of main
    
    public int getNumber(long order){
        int cnt = 0;
        for(int i = 1 ; i < visited.length ; i++){
            if(!visited[i]){
                cnt++;
                if(cnt==order){
                    visited[i] = true;
                    return i;
                }
            } 
        }
        return 0;
    }
    
}

// 팩토리얼을 활용한 논리문제
// 전체 경우의 수 = n!
// k를 factorial[n - 1] 로 나누면 줄 서는 사람 값이 나오므로
// 이를 활용해서 리스트에 add 후 리턴한다
