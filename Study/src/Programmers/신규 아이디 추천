import java.util.*;

class Solution {
    public String solution(String new_id) {
        String answer = "";
        
        // 1번
        new_id = new_id.toLowerCase(); 

        // 2번
        for(int i = 0; i < new_id.length(); i++) {
            int k = new_id.charAt(i);
            if((k >= 'a' && k <= 'z') || 
               (k >= '0' && k <= '9') || 
               k == '.' || k == '-' || k == '_') {
                answer += new_id.charAt(i);
            }
        }
        
        // 3번
        while(answer.contains("..")) {
            answer = answer.replace("..", ".");
        }
        
        // 4번
        
        if(answer.length() == 1) {
            if(answer.charAt(0) == '.') {
                answer = "";
            }
        } else if(answer.length() > 1){
            if(answer.charAt(0) == '.') {
                answer = answer.substring(1, answer.length());
            }
            if(answer.charAt(answer.length() - 1) == '.') {
                answer = answer.substring(0, answer.length() - 1);
            }
        }
        
        // 5번
        if(answer.length() == 0) {
            answer += "a";
        }
        
        // 6번
        if(answer.length() > 15) {
            answer = answer.substring(0,15);
        }
        
        if(answer.length() == 1) {
            if(answer.charAt(0) == '.') {
                answer = "";
            }
        } else if(answer.length() > 1){
            if(answer.charAt(0) == '.') {
                answer = answer.substring(1, answer.length());
            }
            if(answer.charAt(answer.length() - 1) == '.') {
                answer = answer.substring(0, answer.length() - 1);
            }
        }

        // 7번
        if(answer.length() <= 2) {
            while(answer.length() < 3){
                answer += answer.charAt(answer.length() - 1) + "";
            }
        }
        
        return answer;
    }
}

// 스탭별로 나눠서 해보자

// 1. 대문자 -> 소문자
// 2. 소문자, 숫자, -, _, . 를 제외한 모든 문자 제거 -> 아스키값 이용
// 3. 마침표가 2번이상 연속된 부분을 하나의 마침표로 치환 -> 카운트 세서 subString...?
// 4. 처음이나 끝에 마침표 있으면 제거
// 5. 빈문자열이면 a 추가 -> 아스키값 이용
// 6. 길이가 16 이상이면 처음부터 15개만 남기고 모두 제거 / 제거 후 마지막이 마침표면 제거 
// 7. 길이가 2 이하라면 마지막 문자를 총 길이 3이 될때까지 반복 

// 매개변수로 받아서 값을 쓰는 것이
// 지역변수 선언해서 값 복사해서 쓰는 것보다 빠르다
// 지역변수로 복사해서 쓰면 느려진다!!!